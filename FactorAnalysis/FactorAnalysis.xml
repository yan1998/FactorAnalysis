<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactorAnalysis</name>
    </assembly>
    <members>
        <member name="T:FactorAnalysis.Controllers.ForecastingTaskEntityController">
            <summary>
            Main controller for Managing Forecasting task entities
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.#ctor(Microsoft.Extensions.Logging.ILogger{FactorAnalysis.Controllers.ForecastingTaskEntityController},BusinessLogic.Services.Abstractions.IForecastingTasksService,BusinessLogic.Services.Abstractions.IMachineLearningService,BusinessLogic.Services.Abstractions.IImportExportInFileService,AutoMapper.IMapper)">
            <summary>
            Constructor for controller instantiation
            </summary>
            <param name="logger">Logger</param>
            <param name="forecastingTasksService">Service for managing forecasting tasks</param>
            <param name="machineLearningService">Service for machine learning functionallity</param>
            <param name="importExportInFileService">Service for files functionallity</param>
            <param name="mapper">Mapper</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetAllForecastingTaskEntities">
            <summary>
            Get all Forecasting Tasks name and description
            </summary>
            <returns>List of Forecasting Task entities information</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.CreateForecastingTaskEntity(FactorAnalysis.Model.Requests.CreateForecastingTaskEntityRequest)">
            <summary>
            Create new Forecasting Task
            </summary>
            <param name="request">Task creation request</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.UpdateForecastingTaskEntity(FactorAnalysis.Model.Requests.UpdateForecastingTaskEntityRequest)">
            <summary>
            Update name and description of the Forecasting Task entity
            </summary>
            <param name="request">Old and new names of the Forecasting Task entity with new description</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.DeleteForecastingTaskEntity(System.String)">
            <summary>
            Delete the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.DeleteForecastingTaskEntityRecord(System.String,System.String)">
            <summary>
            Delete the record from the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task Entity</param>
            <param name="recordId">Id of record</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.AddForecstingTaskEntityRecord(System.String,FactorAnalysis.Model.Requests.AddForecstingTaskFactorsValueRequest)">
            <summary>
            Add new record for the Forecasting Tasks entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task Entity</param>
            <param name="request">Request for adding new record</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetForecastingTaskDeclaration(System.String)">
            <summary>
            Get declaration of the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>List of the Forecasting Task entity fields</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetPagedForecastingTaskRecords(FactorAnalysis.Model.Requests.GetPagedForecastingTaskRequest)">
            <summary>
            Get filtered and paged the Forecasting Task records
            </summary>
            <param name="request">Search request</param>
            <returns>Paged and filtered information</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesCsvFile(System.String)">
            <summary>
            Save a CSV file with the FOrecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.UploadCsvFile(System.String)">
            <summary>
            Upload a CSV file with data
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesJsonFile(System.String)">
            <summary>
            Save a JSON file with the Forecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesXmlFile(System.String)">
            <summary>
            Save a XML file with the Forecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.CreateTaskEntityPredictionModel(System.String,DomainModel.ForecastingTasks.LearningAlgorithm)">
            <summary>
            Create a prediction model for the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <param name="learningAlgorithm">Name of learning algorithm</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.PredictValue(System.String,FactorAnalysis.Model.Requests.PredictValueRequest)">
            <summary>
            Predict value for the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <param name="request">List of factor values</param>
            <returns>Predicted value</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.AnalyzePredictionAlgorithms(FactorAnalysis.Model.Requests.AnalyzePredictionAlgorithmsRequest)">
            <summary>
            
            </summary>
            <param name="request">Request with Forecasting Task entity name and list of names of learning algorithms</param>
            <returns>Reports of training and prediction</returns>
        </member>
    </members>
</doc>
