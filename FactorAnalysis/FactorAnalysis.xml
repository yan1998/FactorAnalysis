<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FactorAnalysis</name>
    </assembly>
    <members>
        <member name="T:FactorAnalysis.Controllers.ExchangeRateFactorsController">
            <summary>
            Controller for interact with ExchangeRateFactors
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.GetExchangeRateFactorsRange(System.DateTime,System.DateTime)">
            <summary>
            Get ExchangeRateFactors for date range
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.PredictUSDCurrencyExchange(FactorAnalysis.Model.Requests.CurrencyExchangePredictionRequest)">
            <summary>
            Get Currency Exchange prediction result for USD
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.PredictEURCurrencyExchange(FactorAnalysis.Model.Requests.CurrencyExchangePredictionRequest)">
            <summary>
            Get Currency Exchange prediction result for EUR
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.ExchangeRateFactorsById(System.Int32)">
            <summary>
            Get Currency Exchange rate factors record by id
            </summary>
            <param name="id">Database id field</param>
            <returns></returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.PagedExchangeRateFactors(System.Int32,System.Int32)">
            <summary>
            Get Currency Exchange rate factors with pagination support
            </summary>
            <param name="pageNumber">Number of page</param>
            <param name="perPage">Count of record per page</param>
            <returns></returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.CreateExchangeRateFactors(DomainModel.ExchangeRateFactors.ExchangeRateFactors)">
            <summary>
            Create new ExchangeRateFactors record to database
            </summary>
            <param name="request">Creation request</param>
            <returns></returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.UpdateExchangeRateFactors(System.Int32,DomainModel.ExchangeRateFactors.ExchangeRateFactors)">
            <summary>
            Update ExchangeRateFactors record by id
            </summary>
            <param name="id">Id of record</param>
            <param name="request">Creation request</param>
            <returns></returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ExchangeRateFactorsController.DeleteExchangeRateFactors(System.Int32)">
            <summary>
            Remove ExchangeRateFactors record from Database by id
            </summary>
            <param name="id">>Id of record</param>
            <returns></returns>
        </member>
        <member name="T:FactorAnalysis.Controllers.ForecastingTaskEntityController">
            <summary>
            Main controller for Managing Forecasting task entities
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.#ctor(Microsoft.Extensions.Logging.ILogger{FactorAnalysis.Controllers.ForecastingTaskEntityController},BusinessLogic.Services.Abstractions.IForecastingTasksService,BusinessLogic.Services.Abstractions.IMachineLearningService,BusinessLogic.Services.Abstractions.IImportExportInFileService,AutoMapper.IMapper)">
            <summary>
            Constructor for controller instantiation
            </summary>
            <param name="logger">Logger</param>
            <param name="forecastingTasksService">Service for managing forecasting tasks</param>
            <param name="machineLearningService">Service for machine learning functionallity</param>
            <param name="importExportInFileService">Service for files functionallity</param>
            <param name="mapper">Mapper</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetAllForecastingTaskEntities">
            <summary>
            Get all Forecasting Tasks name and description
            </summary>
            <returns>List of Forecasting Task entities information</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.CreateForecastingTaskEntity(FactorAnalysis.Model.Requests.CreateForecastingTaskEntityRequest)">
            <summary>
            Create new Forecasting Task
            </summary>
            <param name="request">Task creation request</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.UpdateForecastingTaskEntity(FactorAnalysis.Model.Requests.UpdateForecastingTaskEntityRequest)">
            <summary>
            Update name and description of the Forecasting Task entity
            </summary>
            <param name="request">Old and new names of the Forecasting Task entity with new description</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.DeleteForecastingTaskEntity(System.String)">
            <summary>
            Delete the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.DeleteForecastingTaskEntityRecord(System.String,System.String)">
            <summary>
            Delete the record from the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task Entity</param>
            <param name="recordId">Id of record</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.AddForecstingTaskEntityRecord(System.String,FactorAnalysis.Model.Requests.AddForecstingTaskFactorsValueRequest)">
            <summary>
            Add new record for the Forecasting Tasks entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task Entity</param>
            <param name="request">Request for adding new record</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetForecastingTaskDeclaration(System.String)">
            <summary>
            Get declaration of the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>List of the Forecasting Task entity fields</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.GetPagedForecastingTaskRecords(FactorAnalysis.Model.Requests.GetPagedForecastingTaskRequest)">
            <summary>
            Get filtered and paged the Forecasting Task records
            </summary>
            <param name="request">Search request</param>
            <returns>Paged and filtered information</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesCsvFile(System.String)">
            <summary>
            Save a CSV file with the FOrecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.UploadCsvFile(System.String)">
            <summary>
            Upload a CSV file with data
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesJsonFile(System.String)">
            <summary>
            Save a JSON file with the Forecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.SaveForecastingTaskValuesXmlFile(System.String)">
            <summary>
            Save a XML file with the Forecasting Task entity records
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <returns>Content result with file</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.CreateTaskEntityPredictionModel(System.String,DomainModel.ForecastingTasks.LearningAlgorithm)">
            <summary>
            Create a prediction model for the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <param name="learningAlgorithm">Name of learning algorithm</param>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.PredictValue(System.String,FactorAnalysis.Model.Requests.PredictValueRequest)">
            <summary>
            Predict value for the Forecasting Task entity
            </summary>
            <param name="taskEntityName">Name of the Forecasting Task entity</param>
            <param name="request">List of factor values</param>
            <returns>Predicted value</returns>
        </member>
        <member name="M:FactorAnalysis.Controllers.ForecastingTaskEntityController.AnalyzePredictionAlgorithms(FactorAnalysis.Model.Requests.AnalyzePredictionAlgorithmsRequest)">
            <summary>
            
            </summary>
            <param name="request">Request with Forecasting Task entity name and list of names of learning algorithms</param>
            <returns>Reports of training and prediction</returns>
        </member>
        <member name="T:FactorAnalysis.Controllers.MLModelsController">
            <summary>
            Controller for interact with ML.NET
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.MLModelsController.CreateEURCurrencyExchangeModel">
            <summary>
            Create Predication model for EURCurrencyExchange
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.MLModelsController.RetrainEURCurrencyExchangeModel">
            <summary>
            Retrain Predication model for EURCurrencyExchange
            </summary>
        </member>
        <member name="T:FactorAnalysis.Controllers.SeedExchangeRateFactorsController">
            <summary>
            Controller for Seed data to ExchangeRateFactors table
            </summary>
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedExchangeRateEUR(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed ExchangeRateEUR field to Database
            SeedData/ExchangeRateEUR.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedExchangeRateUSD(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed ExchangeRateUSD field to Database
            SeedData/ExchangeRateUSD.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedCreditRate(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed CreditRate field to Database
            SeedData/CreditRate.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedExportIndicator(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed ExportIndicator field to Database
            SeedData/ExportIndicator.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedImportIndicator(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed ImportIndicator field to Database
            SeedData/ImportIndicator.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedGDPIndicator(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed GDPIndicator field to Database
            SeedData/GDPIndicator.csv
            </summary> 
        </member>
        <member name="M:FactorAnalysis.Controllers.SeedExchangeRateFactorsController.SeedInflationIndex(FactorAnalysis.Model.Requests.SeedFilePathRequest)">
            <summary>
            Seed InflationIndex field to Database
            SeedData/InflationIndex.csv
            </summary> 
        </member>
    </members>
</doc>
